<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>%Model for Non-preeemtive protocol
%Modeled by Sheikh Muhammad Adib Bin Sh Abu Bakar
%Modelling year: 2022


int Pmax ;//maximum priority among ready task
const int maxPh = 5;//maximum dynamic priority arose
int running_p = 0;//priority of a task that currently ran
int interupt_enable = 1; //true to enable preemtion
const int dynamic_p_enable = 1;//true to enable NPP

clock timer;
int time;// unit time for scheduler
chan execute,wait,signal, finish,preemt,clk_system;
int CS = 0; //state of cs, 1 if currently accessed

//task 1
const int P_1 = 1; //nominal priority
int p_1 = 0;  //dynamic priority
const int phi_1 = 0; //time the first job arrive
const int T_1 =90; //period
const int delta_1 = 10; //duration in cs

const int C_1 = 10; //completion time

int texe_1, tenterCS_1, ta_1;// execution time, entering cs time, arriving time
int fail_1= 0; //number of job miss the dead line
int  Bi_1 = 0;//time blocked
int Bimax_1 = 0; //maximum time blocked
int done_cs_1=0;
int cycle_1 = 0;//number of complete cycle
int cs_complete_1 = 0;//true if running job finish its cs
int currently_use_cs_1=0; //use to skip wait() primitiv when the job is preemted and want to access resource again



//task 2
const int P_2 = 2; //nominal priority
int p_2 = 0;  //dynamic priority
const int phi_2 = 10; //time the first job arrive
const int T_2 =50; //period
const int delta_2 = 10; //duration in cs

const int C_2 = 20; //completion time

int texe_2, tenterCS_2, ta_2; // execution time, entering cs time, arriving time
int fail_2= 0; //number of job miss the dead line
int  Bi_2 = 0;//time blocked
int Bimax_2 = 0; //maximum time blocked
int done_cs_2=0;
int cycle_2 = 0;//number of complete cycle
int cs_complete_2 = 0;//true if running job finish its cs
int currently_use_cs_2=0;//use to skip wait() primitiv when the job is preemted and want to access resource again



//task 3
const int P_3 = 3; //nominal priority
int p_3 = 0;  //dynamic priority
const int phi_3 = 30; //time the first job arrive
const int T_3 =80; //period
const int delta_3 = 13; //duration in cs

const int C_3 = 20; //completion time

int texe_3, tenterCS_3, ta_3; // execution time, entering cs time, arriving time
int fail_3= 0; //number of job miss the dead line
int  Bi_3 = 0;//time blocked
int Bimax_3 = 0; //maximum time blocked
int done_cs_3=0;
int cycle_3 = 0;//number of complete cycle
int cs_complete_3 = 0;//true if running job finish its cs
int currently_use_cs_3=0;//use to skip wait() primitiv when the job is preemted and want to access resource again









</declaration>
	<template>
		<name x="5" y="5">task</name>
		<parameter>const int &amp;phi_ ,const int &amp;T_ ,int &amp;cycle_ ,const int &amp;P_,const int &amp;C_,int &amp;texe_, int &amp;tenterCS_, int &amp;ta_,const int &amp;delta_,int &amp;fail_,int  &amp;Bi_ ,int &amp;Bimax_ ,int &amp;done_cs_,int &amp;p_,int &amp;cs_complete_, int &amp;currently_use_cs_</parameter>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="416" y="255">
			<name x="406" y="221">active</name>
		</location>
		<location id="id1" x="535" y="255">
			<name x="492" y="263">ready</name>
		</location>
		<location id="id2" x="807" y="255">
			<name x="765" y="246">run</name>
		</location>
		<location id="id3" x="816" y="450">
			<name x="816" y="467">cs</name>
			<label kind="invariant" x="748" y="484">time - tenterCS_ &lt;= delta_</label>
		</location>
		<location id="id4" x="663" y="255">
			<name x="637" y="221">waiting</name>
			<label kind="invariant" x="612" y="272">p_!=maxPh</label>
		</location>
		<location id="id5" x="603" y="374">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="1028" y="450">currently_use_cs_==1</label>
			<nail x="1019" y="289"/>
			<nail x="1019" y="535"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="620" y="331">finish!</label>
			<nail x="620" y="331"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="688" y="425">preemt?</label>
			<label kind="assignment" x="535" y="450">done_cs_:=(time-tenterCS_&lt;delta_)?0:1</label>
			<nail x="671" y="450"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="603" y="178">preemt?</label>
			<nail x="654" y="127"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="688" y="255">p_ ==Pmax</label>
			<label kind="synchronisation" x="705" y="272">execute?</label>
			<label kind="assignment" x="714" y="229">running_p:=p_, Bi_:= (time -texe_)</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="assignment" x="561" y="255">texe_:=time</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="382" y="-93">time-(phi_+(T_*cycle_))&gt;T_</label>
			<label kind="synchronisation" x="391" y="-110">finish!</label>
			<label kind="assignment" x="374" y="-76">done_cs_:=0,texe_ :=0,fail_ := fail_+1, cycle_:=cycle_ +1,ta_:=0,tenterCS_ :=0, p_:= P_,Bimax_ := (Bimax_&gt;=Bi_)?Bimax_:Bi_</label>
			<nail x="612" y="-42"/>
			<nail x="366" y="-51"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="425" y="59">time-texe_&gt;=C_ &amp;&amp; time-ta_&lt;=T_ &amp;&amp; done_cs_==1</label>
			<label kind="synchronisation" x="424" y="25">finish!</label>
			<label kind="assignment" x="433" y="76">done_cs_:=0,texe_ :=0,cycle_:=cycle_ +1,ta_:=0,tenterCS_ :=0, p_:= P_,Bimax_ := (Bimax_&gt;=Bi_)?Bimax_:Bi_</label>
			<nail x="637" y="59"/>
			<nail x="416" y="51"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="748" y="314">time - tenterCS_ &gt;= delta_</label>
			<label kind="synchronisation" x="765" y="340">signal!</label>
			<label kind="assignment" x="714" y="357">p_:= P_,cs_complete_:= cs_complete_+1,currently_use_cs_:=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="952" y="314">(time+delta_)&lt;(phi_ + (T_*(cycle_+1)))&amp;&amp; CS==0 &amp;&amp; done_cs_==0</label>
			<label kind="synchronisation" x="986" y="365">wait!</label>
			<label kind="assignment" x="952" y="382">tenterCS_ := time,p_:=(dynamic_p_enable)?maxPh:P_,done_cs_:=1,currently_use_cs_:=1</label>
			<nail x="943" y="306"/>
			<nail x="943" y="399"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="365" y="289">time &gt;= phi_ + (T_*cycle_)</label>
			<label kind="assignment" x="399" y="306">ta_ := time</label>
		</transition>
	</template>
	<template>
		<name>set_p_max</name>
		<parameter>int &amp;texe1_, int &amp;p1_,int &amp;texe2_, int &amp;p2_,int &amp;texe3_, int &amp;p3_</parameter>
		<declaration>
//set the maximum priority among ready task
int pmax(int p1, int texe1,int p2, int texe2,int p3, int texe3)
{
    int ready1 = (texe1&gt;0);
    int ready2 = (texe2&gt;0);
    int ready3 = (texe3&gt;0);

    
   return  ( p3*ready3 &gt;= (( p1*ready1 &gt;= p2*ready2 ) ? p1 : p2) ) ? p3 : ( p1*ready1 &gt;= p2*ready2 ) ? p1 : p2;
    
}

</declaration>
		<location id="id6" x="-144" y="-8">
			<name x="-127" y="-25">set</name>
		</location>
		<location id="id7" x="8" y="-17">
			<name x="-2" y="-51">reset</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-109" y="-119">clk_system?</label>
			<label kind="assignment" x="-109" y="-102">Pmax:=0</label>
			<nail x="-25" y="-102"/>
			<nail x="-127" y="-102"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-119" y="25">clk_system?</label>
			<label kind="assignment" x="-212" y="59">Pmax := pmax(p1_,texe1_,p2_,texe2_,p3_,texe3_)</label>
			<nail x="-119" y="51"/>
			<nail x="-25" y="51"/>
		</transition>
	</template>
	<template>
		<name>scheduler</name>
		<location id="id8" x="0" y="0">
			<name x="-10" y="-34">idle</name>
		</location>
		<location id="id9" x="170" y="0">
			<name x="160" y="-34">busy</name>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="68" y="161">running_p&lt;Pmax &amp;&amp; interupt_enable ==1</label>
			<label kind="synchronisation" x="76" y="178">preemt?</label>
			<nail x="136" y="161"/>
			<nail x="59" y="144"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="34" y="42">finish?</label>
			<nail x="119" y="68"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="60" y="-51">execute!</label>
			<nail x="42" y="-68"/>
		</transition>
	</template>
	<template>
		<name>timeUnit</name>
		<location id="id10" x="0" y="0">
			<name x="-10" y="-34">clck</name>
			<label kind="invariant" x="17" y="-8">timer &lt;= 0</label>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-34" y="51">clk_system!</label>
			<label kind="assignment" x="-229" y="17">time:= time+1, timer:=0</label>
			<nail x="-76" y="93"/>
			<nail x="-76" y="93"/>
			<nail x="-85" y="-25"/>
		</transition>
	</template>
	<template>
		<name>resource</name>
		<location id="id11" x="0" y="0">
			<name x="-51" y="-17">free</name>
		</location>
		<location id="id12" x="178" y="0">
			<name x="168" y="-34">busy</name>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="59" y="34">signal?</label>
			<label kind="assignment" x="60" y="59">CS := 0</label>
			<nail x="153" y="59"/>
			<nail x="42" y="59"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="68" y="-76">wait?</label>
			<label kind="assignment" x="52" y="-51">CS := 1</label>
			<nail x="34" y="-51"/>
			<nail x="119" y="-51"/>
		</transition>
	</template>
	<system>
task1 =task(phi_1 ,T_1 ,cycle_1 ,P_1,C_1,texe_1, tenterCS_1, ta_1,delta_1,fail_1,Bi_1,Bimax_1,done_cs_1,p_1,cs_complete_1 ,currently_use_cs_1) ;
task2 =task(phi_2 ,T_2 ,cycle_2 ,P_2,C_2,texe_2, tenterCS_2, ta_2,delta_2,fail_2,Bi_2,Bimax_2,done_cs_2,p_2,cs_complete_2 ,currently_use_cs_2) ;
task3 =task(phi_3 ,T_3 ,cycle_3 ,P_3,C_3,texe_3, tenterCS_3, ta_3,delta_3,fail_3,Bi_3,Bimax_3,done_cs_3,p_3,cs_complete_3 ,currently_use_cs_3) ;
set =set_p_max(texe_1, p_1,texe_2, p_2,texe_3, p_3);


system scheduler,task1,task2,task3, resource, timeUnit,  set;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
